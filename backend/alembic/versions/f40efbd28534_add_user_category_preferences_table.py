"""add_user_category_preferences_table

Revision ID: f40efbd28534
Revises: ea4c1b445e29
Create Date: 2025-07-30 05:29:30.073615

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f40efbd28534'
down_revision: Union[str, Sequence[str], None] = 'ea4c1b445e29'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_category_preferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('merchant_name', sa.String(length=200), nullable=False),
    sa.Column('category_name', sa.String(length=100), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_category_preferences_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_category_preferences_pkey')),
    sa.UniqueConstraint('user_id', 'merchant_name', name='uq_user_merchant')
    )
    op.create_index(op.f('user_category_preferences_id_idx'), 'user_category_preferences', ['id'], unique=False)
    op.create_index(op.f('user_category_preferences_merchant_name_idx'), 'user_category_preferences', ['merchant_name'], unique=False)
    op.create_index(op.f('user_category_preferences_user_id_idx'), 'user_category_preferences', ['user_id'], unique=False)
    op.drop_index(op.f('upload_history_id_idx'), table_name='upload_history')
    op.drop_index(op.f('upload_history_upload_date_idx'), table_name='upload_history')
    op.drop_index(op.f('upload_history_user_id_idx'), table_name='upload_history')
    op.drop_table('upload_history')
    op.drop_index(op.f('belvo_institutions_belvo_id_idx'), table_name='belvo_institutions')
    op.drop_index(op.f('belvo_institutions_code_idx'), table_name='belvo_institutions')
    op.drop_index(op.f('belvo_institutions_country_code_idx'), table_name='belvo_institutions')
    op.drop_index(op.f('belvo_institutions_id_idx'), table_name='belvo_institutions')
    op.drop_index(op.f('belvo_institutions_name_idx'), table_name='belvo_institutions')
    op.drop_table('belvo_institutions')
    op.drop_index(op.f('insights_id_idx'), table_name='insights')
    op.drop_table('insights')
    op.drop_index(op.f('budgets_category_idx'), table_name='budgets')
    op.drop_index(op.f('budgets_id_idx'), table_name='budgets')
    op.drop_table('budgets')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('budgets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('limit_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('spent_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('budgets_pkey'))
    )
    op.create_index(op.f('budgets_id_idx'), 'budgets', ['id'], unique=False)
    op.create_index(op.f('budgets_category_idx'), 'budgets', ['category'], unique=True)
    op.create_table('insights',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('actionable', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('insights_pkey'))
    )
    op.create_index(op.f('insights_id_idx'), 'insights', ['id'], unique=False)
    op.create_table('belvo_institutions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('belvo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('display_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('code', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('country_code', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('country_codes', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('primary_color', sa.VARCHAR(length=7), autoincrement=False, nullable=False),
    sa.Column('logo', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('icon_logo', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('text_logo', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('website', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('belvo_institutions_pkey'))
    )
    op.create_index(op.f('belvo_institutions_name_idx'), 'belvo_institutions', ['name'], unique=False)
    op.create_index(op.f('belvo_institutions_id_idx'), 'belvo_institutions', ['id'], unique=False)
    op.create_index(op.f('belvo_institutions_country_code_idx'), 'belvo_institutions', ['country_code'], unique=False)
    op.create_index(op.f('belvo_institutions_code_idx'), 'belvo_institutions', ['code'], unique=False)
    op.create_index(op.f('belvo_institutions_belvo_id_idx'), 'belvo_institutions', ['belvo_id'], unique=True)
    op.create_table('upload_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('filename', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('PROCESSING', 'SUCCESS', 'FAILED', name='uploadstatus'), autoincrement=False, nullable=False),
    sa.Column('upload_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('upload_history_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('upload_history_pkey'))
    )
    op.create_index(op.f('upload_history_user_id_idx'), 'upload_history', ['user_id'], unique=False)
    op.create_index(op.f('upload_history_upload_date_idx'), 'upload_history', ['upload_date'], unique=False)
    op.create_index(op.f('upload_history_id_idx'), 'upload_history', ['id'], unique=False)
    op.drop_index(op.f('user_category_preferences_user_id_idx'), table_name='user_category_preferences')
    op.drop_index(op.f('user_category_preferences_merchant_name_idx'), table_name='user_category_preferences')
    op.drop_index(op.f('user_category_preferences_id_idx'), table_name='user_category_preferences')
    op.drop_table('user_category_preferences')
    # ### end Alembic commands ###
