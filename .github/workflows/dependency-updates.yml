name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-python-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Update dependencies
      run: |
        cd backend
        uv sync --upgrade
        
    - name: Check for changes
      id: changes
      run: |
        cd backend
        if git diff --quiet uv.lock; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      if: steps.changes.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Python dependencies'
        title: 'chore: update Python dependencies'
        body: |
          ## Automated Dependency Update
          
          This PR updates Python dependencies to their latest compatible versions.
          
          ### Changes
          - Updated `uv.lock` with latest dependency versions
          
          ### Testing
          - [ ] All CI checks pass
          - [ ] Manual testing completed (if required)
          
          **This is an automated PR. Please review the changes and test thoroughly before merging.**
        branch: chore/update-python-dependencies
        delete-branch: true
        labels: |
          dependencies
          automated

  update-node-dependencies:
    name: Update Node.js Dependencies  
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: finance-dashboard/package-lock.json

    - name: Update dependencies
      run: |
        cd finance-dashboard
        npm update
        npm audit fix --audit-level moderate

    - name: Check for changes
      id: changes
      run: |
        cd finance-dashboard
        if git diff --quiet package-lock.json package.json; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      if: steps.changes.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Node.js dependencies'
        title: 'chore: update Node.js dependencies'
        body: |
          ## Automated Dependency Update
          
          This PR updates Node.js dependencies to their latest compatible versions.
          
          ### Changes
          - Updated `package-lock.json` and potentially `package.json`
          - Applied security fixes for moderate+ vulnerabilities
          
          ### Testing
          - [ ] All CI checks pass
          - [ ] Frontend builds successfully
          - [ ] Manual testing completed (if required)
          
          **This is an automated PR. Please review the changes and test thoroughly before merging.**
        branch: chore/update-node-dependencies
        delete-branch: true
        labels: |
          dependencies
          automated
          frontend

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Python security audit
      run: |
        cd backend
        uv sync
        uv run pip-audit --format=json --output=python-audit.json || true

    - name: Node.js security audit
      run: |
        cd finance-dashboard
        npm audit --audit-level=moderate --json > node-audit.json || true

    - name: Upload audit results
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-results
        path: |
          backend/python-audit.json
          finance-dashboard/node-audit.json

    - name: Create issue for critical vulnerabilities
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let criticalIssues = [];
          
          // Check Python audit results
          try {
            const pythonAudit = JSON.parse(fs.readFileSync('backend/python-audit.json', 'utf8'));
            if (pythonAudit.vulnerabilities && pythonAudit.vulnerabilities.length > 0) {
              criticalIssues.push('🐍 Python vulnerabilities detected');
            }
          } catch (error) {
            console.log('No Python audit results found');
          }
          
          // Check Node.js audit results  
          try {
            const nodeAudit = JSON.parse(fs.readFileSync('finance-dashboard/node-audit.json', 'utf8'));
            if (nodeAudit.metadata && nodeAudit.metadata.vulnerabilities) {
              const vulns = nodeAudit.metadata.vulnerabilities;
              if (vulns.critical > 0 || vulns.high > 0) {
                criticalIssues.push('📦 Node.js critical/high vulnerabilities detected');
              }
            }
          } catch (error) {
            console.log('No Node.js audit results found');
          }
          
          if (criticalIssues.length > 0) {
            const issueBody = `## 🚨 Security Vulnerabilities Detected
            
            Automated security audit found critical vulnerabilities:
            
            ${criticalIssues.map(issue => `- ${issue}`).join('\n')}
            
            ### Action Required
            - Review the security audit results
            - Update vulnerable dependencies
            - Test the application thoroughly
            - Deploy security fixes promptly
            
            ### Audit Results
            Check the workflow artifacts for detailed vulnerability reports.
            
            **This issue was created automatically by the security audit workflow.**`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Security Vulnerabilities Detected',
              body: issueBody,
              labels: ['security', 'high-priority', 'automated']
            });
          }